{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/utility.js","src/web-api.js","src/resources/index.js","src/scraper/scraper-list.js","src/scraper/scraper-service.js","src/resources/elements/loading-indicator.js"],"names":["App","api","configureRouter","config","router","title","map","route","moduleId","name","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","areEqual","obj1","obj2","Object","keys","every","key","hasOwnProperty","WebAPI","client","x","withBaseUrl","_client","json","url","get","isRequesting","bool","globalResources","ScraperList","ea","scraperService","_api","_scraperService","isScraping","scrapers","created","getScrapers","JSON","parse","r","response","scrape","source","getScrape","scraped","files","unshift","ScraperService","nprogress","LoadingIndicator","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {WebAPI} from './web-api';\n\n@inject(WebAPI)\nexport class App {\n  constructor(api) {\n    this.api = api;\n  }\n\n  configureRouter(config, router) {\n    config.title = 'Contacts';\n    config.map([\n      { route: '',  moduleId: 'scraper/scraper-list', name:'scraper' }\n    ]);\n\n    this.router = router;\n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\n\n@inject(HttpClient)\nexport class WebAPI {\n\n  constructor(client) {\n    client\n      .configure(x => {\n        x.withBaseUrl('http://srapoo.dev');\n        //x.withHeader('Authorization', 'bearer 123');\n      });\n    this._client = client;\n  }\n\n  get isRequesting() {\n    return this._client.isRequesting;\n  }\n\n  set isRequesting(bool) {\n    this._client.isRequesting = bool;\n\n    return this;\n  }\n\n  json(url) {\n    return this._client.get(url);\n  }\n}\n","export function configure(config) {\n  config.globalResources(['./elements/loading-indicator']);\n}","import {inject} from 'aurelia-framework';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {WebAPI} from '../web-api';\r\nimport {ScraperService} from './scraper-service';\r\n\r\n@inject(WebAPI, EventAggregator, ScraperService)\r\nexport class ScraperList {\r\n  constructor(api, ea, scraperService) {\r\n    this._api = api;\r\n    this.ea = ea;\r\n    this._scraperService = scraperService;\r\n\r\n    this.isScraping = {};\r\n    this.scrapers = [];\r\n  }\r\n\r\n  created() {\r\n    this._scraperService.getScrapers().then(r => {\r\n      this.scrapers = JSON.parse(r.response);\r\n    })\r\n  }\r\n\r\n  scrape(source) {\r\n    this.isScraping[source.name] = true;\r\n    this._scraperService.getScrape(source).then(r => {\r\n      let scraped = JSON.parse(r.response);\r\n      source.files.unshift(scraped.files[0]);\r\n\r\n      this.isScraping[source.name] = false;\r\n      //this.scrapers.push(scraped.files.shift());\r\n      //this.routeConfig.navModel.setTitle(contact.firstName);\r\n      //this.originalContact = JSON.parse(JSON.stringify(contact));\r\n      //this.ea.publish(new ContactUpdated(this.contact));\r\n    });\r\n  }\r\n\r\n\r\n}","import {inject} from 'aurelia-framework';\nimport {WebAPI} from '../web-api';\n\n@inject(WebAPI)\nexport class ScraperService {\n\n  constructor(api) {\n    this._api = api;\n  }\n\n  getScrapers() {\n    return this._api.json('/api/sources');\n  }\n\n  getScrape(source) {\n    return this._api.json('/api/sources/' + source.name);\n  }\n}\n","import * as nprogress from 'nprogress';\r\nimport {bindable, noView} from 'aurelia-framework';\r\n\r\n@noView(['nprogress/nprogress.css'])\r\nexport class LoadingIndicator {\r\n  @bindable loading = false;\r\n\r\n  loadingChanged(newValue) {\r\n    if (newValue) {\r\n      nprogress.start();\r\n    } else {\r\n      nprogress.done();\r\n    }\r\n  }\r\n}"],"sourceRoot":".."}